@using Nop.Core
@using Nop.Core.Infrastructure
@using Nop.Services.Configuration

@{
    var storeId = EngineContext.Current.Resolve<IStoreContext>().CurrentStore.Id;
    var settingService = EngineContext.Current.Resolve<ISettingService>();
    var numberofSubCategories = settingService.GetSettingByKey("pavilionthemesettings.numberofsubcategories", 0, storeId, true);
}

@model Nop.Web.Models.Catalog.CategorySimpleModel

<div class="sub-category-details">
    <h2 class="inner-title">
        <a href="@Url.RouteUrl("Category", new {SeName = Model.SeName})" title="@Model.Name">@Model.Name</a>
    </h2>
    <ul class="sub-category-sublist">
        @{
            bool showViewAllLink = false;

            if (Model.SubCategories.Count > numberofSubCategories)
            {
                showViewAllLink = true;
            }
        }

        @foreach (var item in Model.SubCategories.Take(numberofSubCategories))
            {
            <li>
                @if (item.NumberOfProducts.HasValue)
                {
                    <a href="@Url.RouteUrl("Category", new {SeName = item.SeName})" title="@item.Name">@item.Name @T("Categories.TotalProducts", item.NumberOfProducts.Value)</a>
                }
                else
                {
                    <a href="@Url.RouteUrl("Category", new {SeName = item.SeName})" title="@item.Name">@item.Name</a>
                }
            </li>
        }

        @if (showViewAllLink)
        {
            <li>
                <a class="view-all" href="@Url.RouteUrl("Category", new {SeName = Model.SeName})" title="@Model.Name">
                    @T("SevenSpikes.Themes.Pavilion.Catalog.Subcategories.ViewAll")
                </a>
            </li>
        }
    </ul>
</div>
