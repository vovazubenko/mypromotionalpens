function UpdateSummary() { var e = $("#SchedulePatternType").val(), t = $("#SchedulePatternType option:selected").text().toLowerCase(), n = sevenSpikes.getHiddenValFromDom("#SchedulePatternFromTime"), a = sevenSpikes.getHiddenValFromDom("#SchedulePatternToTime"), o = sevenSpikes.getHiddenValFromDom("#EntityFromDate"), d = sevenSpikes.getHiddenValFromDom("#EntityToDate"), r = sevenSpikes.getHiddenValFromDom("#ExactDayValue"), i = sevenSpikes.getHiddenValFromDom("#EveryMonthFromDayValue"), s = sevenSpikes.getHiddenValFromDom("#EveryMonthToDayValue"); 10 == e && (t = "every month from the " + NumberWithOrdinalIndicators(i) + " to the " + NumberWithOrdinalIndicators(s) + " day"), 25 == e && (t = "on the " + NumberWithOrdinalIndicators(r) + " day of every month"), "" == n && (n = "no starting time"), "" == a && (a = "no ending time"), "" == o && (o = "no starting date"), "" == d && (d = "no ending date"), $("#patternType").text(t), $("#timeFrom").text(n), $("#timeTo").text(a), $("#dateFrom").text(o), $("#dateTo").text(d) } function UpdateSchedule() { var e = sevenSpikes.getHiddenValFromDom("#update-schedule-url"), t = sevenSpikes.getHiddenValFromDom("#schedule-id"), n = sevenSpikes.getHiddenValFromDom("#EntityFromDate"), a = sevenSpikes.getHiddenValFromDom("#EntityToDate"), o = sevenSpikes.getHiddenValFromDom("#SchedulePatternType"), d = sevenSpikes.getHiddenValFromDom("#SchedulePatternFromTime"), r = sevenSpikes.getHiddenValFromDom("#SchedulePatternToTime"), i = sevenSpikes.getHiddenValFromDom("#ExactDayValue"), s = sevenSpikes.getHiddenValFromDom("#EveryMonthFromDayValue"), c = sevenSpikes.getHiddenValFromDom("#EveryMonthToDayValue"), l = "id=" + t; l += "&entityFromDate=" + n, l += "&entityToDate=" + a, l += "&schedulePatternType=" + o, l += "&schedulePatternFromTime=" + d, l += "&schedulePatternToTime=" + r, l += "&ExactDayValue=" + i, l += "&everyMonthFromDayValue=" + s, l += "&everyMonthToDayValue=" + c; var m = {}; addAntiForgeryToken(m), $.ajax({ cache: !1, async: !1, type: "POST", data: l, url: e, headers: m, success: function () { }, error: function (e, t, n) { alert("Updating schedule failed.") } }) } function DeleteSchedule() { var e = sevenSpikes.getHiddenValFromDom("#delete-schedule-url"), t = sevenSpikes.getHiddenValFromDom("#schedule-id"), n = "id=" + t, a = {}; addAntiForgeryToken(a), $.ajax({ cache: !1, async: !1, type: "POST", data: n, url: e, headers: a, success: function () { }, error: function (e, t, n) { alert("Deleting schedule failed.") } }) } function ToggleDropdowns() { var e = $("#SchedulePatternType").val(), t = 10, n = 25; e == t ? ($(".exactDay").hide(), $(".everyMonth").show()) : e == n ? ($(".exactDay").show(), $(".everyMonth").hide()) : $(".exactDay, .everyMonth").hide() } function NumberWithOrdinalIndicators(e) { if (11 == e || 12 == e || 13 == e) return e + "th"; var t = e.toString().slice(-1), n = ""; switch (t) { case "1": n = "st"; break; case "2": n = "nd"; break; case "3": n = "rd"; break; case "4": case "5": case "6": case "7": case "8": case "9": case "0": n = "th" } return e + n } $(document).ready(function () { $(".exactDayDropdown, .everyMonthDropdown, .schedulePatternTypeDropdown").kendoDropDownList(), $(".exactDayDropdown, .everyMonthDropdown").css("width", "80px"), $(".schedulePatternTypeDropdown").css("width", "200px"), $("#sceduleSummary span").css("font-weight", "800"), $(".exactDay, .everyMonth").hide(), $(".content-header > div.pull-right > .bg-blue").click(function () { var e = $(this).attr("name"); ("save" == e || "save-continue" == e) && UpdateSchedule() }), $('.form-actions > input[type="submit"]').click(function () { DeleteSchedule() }), $("#SchedulePatternType").change(ToggleDropdowns), $("fieldset input, fieldset select").change(UpdateSummary) }), $(window).load(function () { ToggleDropdowns(), UpdateSummary() });