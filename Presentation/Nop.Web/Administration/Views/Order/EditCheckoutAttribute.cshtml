@model IList<CheckoutAttributeModel>
@using Nop.Core.Domain.Catalog;
@using Nop.Core.Domain.Media
@using Nop.Core.Infrastructure;
@using System.Text;
@if (Model.Count > 0)
{
    var attributeChangeScriptsBuilder = new StringBuilder();
    <div class="checkout-attributes">
        <dl>
            @foreach (var attribute in Model)
            {
                string controlId = string.Format("checkout_attribute_{0}", attribute.Id);
                string textPrompt = !string.IsNullOrEmpty(attribute.TextPrompt) ? attribute.TextPrompt : attribute.Name;
                <dt id="@string.Format("checkout_attribute_label_{0}", attribute.Id)" style="display:none;">
                    @if (attribute.Name.Contains("Duplicate Order Number") && (attribute.DefaultValue == "0" || string.IsNullOrEmpty(attribute.DefaultValue)))
                    {
                    }
                    else {
                        <label class="text-prompt">
                            @textPrompt
                        </label>
                    }
                    @if (attribute.IsRequired)
                    {
                        <span class="required">*</span>
                    }
                </dt>
                <dd id="@string.Format("checkout_attribute_input_{0}", attribute.Id)">
                    @switch (attribute.AttributeControlTypeId)
                    {
                        case (int)AttributeControlType.DropdownList:
                            {
                                
                                <select name="@(controlId)" id="@(controlId)">
                                    @if (!attribute.IsRequired)
                                    {
                                        <option value="0">---</option>
                                    }
                                    @foreach (var attributeValue in attribute.Values)
                                    {
                                        var attributeName = attributeValue.PriceAdjustment==0?
                                            attributeValue.Name :
                                            T("ShoppingCart.CheckoutAttributes.PriceAdjustment", attributeValue.Name, attributeValue.PriceAdjustment).Text;
                                        <option selected="@attributeValue.IsPreSelected" value="@attributeValue.Id">@attributeName</option>
                                    }
                                </select>
                                attributeChangeScriptsBuilder.AppendFormat("$('#{0}').change(function(){{checkoutAttributeChange();}});\n", controlId);
                            }
                            break;
                        case (int)AttributeControlType.RadioList:
                            {
                                <ul class="option-list" style="display:none;">
                                    @foreach (var attributeValue in attribute.Values)
                                    {
                                        var attributeName = attributeValue.PriceAdjustment==0 ?
                                            attributeValue.Name :
                                            T("ShoppingCart.CheckoutAttributes.PriceAdjustment", attributeValue.Name, attributeValue.PriceAdjustment).Text;
                                        <li>
                                            <input id="@(controlId)_@(attributeValue.Id)" type="radio" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" />
                                            <label for="@(controlId)_@(attributeValue.Id)">@attributeName</label>
                                        </li>
                                        attributeChangeScriptsBuilder.AppendFormat("$('#{0}_{1}').click(function(){{checkoutAttributeChange();}});\n", controlId, attributeValue.Id);
                                    }
                                </ul>
                            }
                            break;
                        case (int)AttributeControlType.Checkboxes:
                        case (int)AttributeControlType.ReadonlyCheckboxes:
                            {
                                <ul class="option-list" style="display:none;">
                                    @foreach (var attributeValue in attribute.Values)
                                    {
                                        var attributeName = attributeValue.PriceAdjustment==0 ?
                                            attributeValue.Name :
                                            T("ShoppingCart.CheckoutAttributes.PriceAdjustment", attributeValue.Name, attributeValue.PriceAdjustment).Text;
                                        <li>
                                            <input id="@(controlId)_@(attributeValue.Id)" type="checkbox" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" @(attribute.AttributeControlTypeId == (int)AttributeControlType.ReadonlyCheckboxes ? Html.Raw(" disabled=\"disabled\"") : null) />
                                            <label for="@(controlId)_@(attributeValue.Id)">@attributeName</label>
                                        </li>
                                        attributeChangeScriptsBuilder.AppendFormat("$('#{0}_{1}').click(function(){{checkoutAttributeChange();}});\n", controlId, attributeValue.Id);
                                    }
                                </ul>
                            }
                            break;
                        case (int)AttributeControlType.TextBox:
                            {
                                <div style="display:none;">
                                @if (attribute.Name.Contains("Duplicate Order Number"))
                                {
                                    if ((attribute.DefaultValue == "0" || string.IsNullOrEmpty(attribute.DefaultValue)))
                                    { }
                                    else
                                    {
                                        <input name="@(controlId)" style="text-align: left;border: none;background: no-repeat;" readonly type="text" class="textbox" id="@(controlId)" value="@attribute.DefaultValue" />
                                    }
                                }
                                else {
                                    <input name="@(controlId)" placeholder="@attribute.Name" type="text" class="textbox" id="@(controlId)" value="@attribute.DefaultValue" />
                                }
                                    </div>
                            }
                            break;
                        case (int)AttributeControlType.MultilineTextbox:
                            {
                                if (attribute.Name.Contains("Comment"))
                                {
                                    <textarea placeholder="@attribute.Name" id="@(controlId)" name="@(controlId)" cols="50" style="max-width:100%;width:100%;">@attribute.DefaultValue</textarea>
                                }
                                else {
                                    <textarea placeholder="@attribute.Name" id="@(controlId)" name="@(controlId)" style="max-width:100%;width:100%;display:none;">@attribute.DefaultValue</textarea>
                                }
                            }
                            break;
                        
                    }
                </dd>
            }
        </dl>
    </div>

    <script type="text/javascript">
        $(document).ready(function () {
            @*checkoutAttributeChange();
            @Html.Raw(attributeChangeScriptsBuilder.ToString())*@
        });

        function checkoutAttributeChange() {
            $.ajax({
                cache: false,
                url: '@Html.Raw(Url.Action("checkoutattributechange", "shoppingcart"))',
                data: $('#shopping-cart-form').serialize(),
                type: 'post',
                success: function (data) {
                    if (data.enabledattributeids) {
                        for (var i = 0; i < data.enabledattributeids.length; i++) {
                            $('#checkout_attribute_label_' + data.enabledattributeids[i]).show();
                            $('#checkout_attribute_input_' + data.enabledattributeids[i]).show();
                        }
                    }
                    if (data.disabledattributeids) {
                        for (var i = 0; i < data.disabledattributeids.length; i++) {
                            $('#checkout_attribute_label_' + data.disabledattributeids[i]).hide();
                            $('#checkout_attribute_input_' + data.disabledattributeids[i]).hide();
                        }
                    }
                }
            });
        }
    </script>
}