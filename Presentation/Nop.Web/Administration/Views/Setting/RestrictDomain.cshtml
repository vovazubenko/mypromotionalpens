
@model DomainRestrictionModel

@using System.Globalization;

@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Customers.Customers").Text;



}



<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.Configuration.Settings.DomainRestriction")
    </h1>
</div>
<div>
    <p>
        @Html.ValidationSummary(false)
    </p>

</div>
@using (Html.BeginForm("DefaultDomain", "Setting", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.DefaultDomainURL)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopEditorFor(model => model.DefaultDomainURL)
                                    </div>
                                </div>

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-md-7 col-md-offset-5">
                                <button type="submit" name="save" class="btn bg-blue">
                                    <i class="fa fa-floppy-o"></i>
                                    @T("Admin.Common.Save")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
@using (Html.BeginForm("RestrictDomain", "Setting", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">

                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.HiddenFor(model => model.dId)
                                        @Html.NopLabelFor(model => model.DomainURL)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopEditorFor(model => model.DomainURL)
                                    </div>
                                </div>

                            </div>

                        </div>
                        <div class="row">
                            <div class="col-md-7 col-md-offset-5">
                                <button type="submit" id="Add" class="btn btn-primary btn-add">
                                    <i class="fa fa-plus-square"></i>
                                    @T("Admin.Common.AddNew")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="customers-grid"></div>
                        <script>


                            $(document).ready(function() {
                                $("#customers-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("DomainList", "Setting"))",
                                                type: "POST",
                                                dataType: "json",
                                                data:additionalData

                                            },
                                            destroy: {

                                                url: "@Html.Raw(Url.Action("RestrictDomainDelete", "Setting"))",
                                                type: "POST",
                                                dataType: "json",
                                                data: addAntiForgeryToken
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors",
                                            model: {
                                                id: "dId",
                                                fields: {
                                                    //do not implicitly specify all fields
                                                    //we do it only for fields which implicitly require it
                                                    //otherwise, they'll be formatted wrong way
                                                    dId: { type: "number" }
                                                }
                                            }
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(defaultGridPageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    editable: {
                                        confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                        mode: "inline"
                                    },
                                    pageable: {
                                        refresh: true,
                                        pageSizes: [@(gridPageSizes)],
                                        @Html.Partial("_GridPagerMessages")
                                    },
                                    scrollable: false,
                                    dataBound: onDataBound,
                                    columns: [
                                         {
                                             field: "DomainURL",
                                             title: "Domain",
                                             width: 400
                                         },{
                                             field: "dId",
                                             title: "@T("Admin.Common.Edit")",
                                             width: 50,
                                             headerAttributes: { style: "text-align:center" },
                                             attributes: { style: "text-align:center" },
                                             template: '<a class="btn btn-default" href="RestrictDomain/#=dId#"><i class="fa fa-pencil"></i>@T("Admin.Common.Edit")</a>'
                                         },
                                        {
                                            command: { name: "destroy", text: "@T("Admin.Common.Delete")" },
                                            title:"@T("Admin.Common.Delete")",
                                            width: 50
                                        }

                                    ]
                                });
                            });
                            function onDataBound(e) {
                                $('#customers-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').each(function() {
                                    var currentId = $(this).val();
                                    var checked = jQuery.inArray(currentId, selectedIds);
                                    //set checked based on if current checkbox's value is in selectedIds.
                                    $(this).attr('checked', checked > -1);
                                });


                            }

                            function additionalData() {
                                var data = {
                                    dId:$('#@Html.FieldIdFor(model => model.dId)').val(),
                                };
                                addAntiForgeryToken(data);
                                return data;
                            }
                        </script>


                    </div>
                </div>
            </div>
        </div>
    </div>
}










@*@model DomainRestrictionModel

    @{
        //page title
        ViewBag.Title = T("Admin.Configuration.Settings.RestrictDomain").Text;

    }

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="content-header clearfix">
            <h1 class="pull-left">
                @T("Admin.Configuration.Settings.RestrictDomain")
            </h1>
            <div class="pull-right">
                <button type="submit" name="save" class="btn bg-blue">
                    <i class="fa fa-floppy-o"></i>
                    @T("Admin.Common.Save")
                </button>
            </div>
        </div>

        <div class="content">
            <div class="form-horizontal">

                @Html.ValidationSummary(false)

                <div class="panel-group">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="form-group">
                                <div class="col-md-3">
                                    @Html.HiddenFor(model => model.dId)
                                    @Html.NopLabelFor(model => model.DomainURL)
                                </div>
                                <div class="col-md-9">
                                    @Html.NopEditorFor(model => model.DomainURL,"",null,true)
                                    @Html.ValidationMessageFor(model => model.DomainURL)
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    }*@


