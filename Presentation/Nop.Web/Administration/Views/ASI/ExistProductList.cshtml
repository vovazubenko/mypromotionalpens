@using Nop.Admin.Models.ASI
@model ASIExistProductModel
@{
    //page title
    ViewBag.Title = T("Admin.ASI.Products.ExistingProduct").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("ASIProducts");
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;
}


@using (Html.BeginForm("", "", new { }, FormMethod.Post, new { Id = "AddProductForm" }))
{
    @Html.AntiForgeryToken()
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.ASI.Products.ExistingProduct")
        </h1>
        <div class="pull-right">
            <button type="button" id="override-selected" class="btn bg-blue">
                <i class="fa fa-pencil"></i>
                @T("Admin.ASI.Product.Existing.OverrideAll")
            </button>
            <button type="button" id="ignore-selected" class="btn bg-red">
                <i class="fa fa-trash-o"></i>
                @T("Admin.ASI.Product.Existing.IgnoreAll")
            </button>
        </div>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row">

                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.SearchName)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopEditorFor(model => model.SearchName)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.NopLabelFor(model => model.Productcode)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.NopEditorFor(model => model.Productcode)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-8 col-md-offset-4">
                                        <button type="button" id="search-categories-suppliers" class="btn btn-primary btn-search"><i class="fa fa-search"></i>@T("Admin.Common.Search")</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div style="display:none" id="selected_search_options" class="selected-search-options">

                            </div>
                        </div>

                        <div class="row">
                            <div id="SelectBox" class="uk-width-1-1"></div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="products-grid"></div>
                        <script>
                            $(document).ready(function() {$("#products-grid").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("GetExistProductList", "ASI"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: additionalData()
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors"
                                    },
                                    error: function(e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(defaultGridPageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                                },
                                dataBound: onDataBound,
                                pageable: {
                                    refresh: true,
                                    pageSizes: [@(gridPageSizes)],
                                    @Html.Partial("_GridPagerMessages")
                                },
                                editable: {
                                    confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                    mode: "inline"
                                },
                                scrollable: false,
                                columns: [ {
                                    field: "ASIProductId",
                                    headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: "<input type='checkbox' value='#=ASIProductId#' class='checkboxGroups'/>",
                                    width: 50
                                },{
                                    field: "ASIProductManufacturer",
                                    title: "@T("Admin.ASI.Product.ASIProductManufacturers")"
                                },{

                                    field: "ASIProductId",
                                    title: "@T("Admin.ASI.Product.ASIProductId")"

                                }, {
                                    field: "NopProductId",
                                    title: "@T("Admin.ASI.Product.NopProductId")",
                                    template: '<a class="" target="_blank" href="@Url.Action("edit","product")/#=NopProductId#">#=NopProductId#</a>'
                                },
                                {
                                    field: "ASIProductCode",
                                    title: "@T("Admin.ASI.Product.ASIProductCode")"
                                },
                                 {
                                     field: "NopSku",
                                     title: "@T("Admin.ASI.Product.NopSku")"
                                 },

                                  {
                                      field: "ASIProductPrice",
                                      title: "@T("Admin.ASI.Product.ASIProductPrice")"
                                  },
                                   {
                                       field: "NopPrice",
                                       title: "@T("Admin.ASI.Product.NopPrice")"
                                   },
                                    {
                                        field: "Id",
                                        title: "@T("Admin.ASI.Product.Existing.Override")",
                                        width: 100,
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        template: '<a class="btn btn-default" href="OverrideExistingProduct?ASIProductId=#=ASIProductId#&requestid=#=requestId#&productid=#=NopProductId#"><i class="fa fa-pencil"></i>@T("Admin.ASI.Product.Existing.Override")</a>'
                                    }
                                    ,
                                    {
                                        field: "Id",
                                        title: "@T("Admin.ASI.Product.Existing.Ignore")",
                                        width: 100,
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        template: '<a class="btn bg-red" href="ignoreExistingProduct?ASIProductId=#=ASIProductId#&requestid=#=requestId#&productid=#=NopProductId#"><i class="fa fa-trash-o"></i>@T("Admin.ASI.Product.Existing.Ignore")</a>'
                                    }
                                ]
                            }); });
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>


}


<script type="text/javascript">
    var selectedIds = [];
    $(document).ready(function() {
        //search button
        $('#search-categories-suppliers').click(function() {
            //search
            {

                $("#products-grid").kendoGrid({
                    dataSource: {
                        type: "json",
                        transport: {
                            read: {
                                url: "@Html.Raw(Url.Action("GetExistProductList", "ASI"))",
                                type: "POST",
                                dataType: "json",
                                data: additionalData()
                            }
                        },
                        schema: {
                            data: "Data",
                            total: "Total",
                            errors: "Errors"
                        },
                        error: function(e) {
                            display_kendoui_grid_error(e);
                            // Cancel the changes
                            this.cancelChanges();
                        },
                        pageSize: @(defaultGridPageSize),
                        serverPaging: true,
                        serverFiltering: true,
                        serverSorting: true
                    },
                    dataBound: onDataBound,
                    pageable: {
                        refresh: true,
                        pageSizes: [@(gridPageSizes)],
                        @Html.Partial("_GridPagerMessages")
                    },
                    editable: {
                        confirmation: "@T("Admin.Common.DeleteConfirmation")",
                        mode: "inline"
                    },
                    scrollable: false,
                    columns: [ {
                        field: "ASIProductId",
                        headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                        headerAttributes: { style: "text-align:center" },
                        attributes: { style: "text-align:center" },
                        template: "<input type='checkbox' value='#=ASIProductId#' class='checkboxGroups'/>",
                        width: 50
                    },{
                        field: "ASIProductManufacturer",
                        title: "@T("Admin.ASI.Product.ASIProductManufacturers")"
                    },{

                        field: "ASIProductId",
                        title: "@T("Admin.ASI.Product.ASIProductId")"

                    }, {
                        field: "NopProductId",
                        title: "@T("Admin.ASI.Product.NopProductId")",
                        template: '<a class="" target="_blank" href="@Url.Action("edit","product")/#=NopProductId#">#=NopProductId#</a>'
                    },
                                    {
                                        field: "ASIProductCode",
                                        title: "@T("Admin.ASI.Product.ASIProductCode")"
                                    },
                                     {
                                         field: "NopSku",
                                         title: "@T("Admin.ASI.Product.NopSku")"
                                     },

                                      {
                                          field: "ASIProductPrice",
                                          title: "@T("Admin.ASI.Product.ASIProductPrice")"
                                      },
                                       {
                                           field: "NopPrice",
                                           title: "@T("Admin.ASI.Product.NopPrice")"
                                       },
                                        {
                                            field: "Id",
                                            title: "@T("Admin.ASI.Product.Existing.Override")",
                                            width: 100,
                                            headerAttributes: { style: "text-align:center" },
                                            attributes: { style: "text-align:center" },
                                            template: '<a class="btn btn-default" href="OverrideExistingProduct?ASIProductId=#=ASIProductId#&requestid=#=requestId#&productid=#=NopProductId#"><i class="fa fa-pencil"></i>@T("Admin.ASI.Product.Existing.Override")</a>'
                                        }
                                        ,
        {
            field: "Id",
            title: "@T("Admin.ASI.Product.Existing.Ignore")",
            width: 100,
            headerAttributes: { style: "text-align:center" },
            attributes: { style: "text-align:center" },
            template: '<a class="btn bg-red" href="ignoreExistingProduct?ASIProductId=#=ASIProductId#&requestid=#=requestId#&productid=#=NopProductId#"><i class="fa fa-trash-o"></i>@T("Admin.ASI.Product.Existing.Ignore")</a>'
        }
                    ]
                });
                $('.checkboxGroups').attr('checked', false).change();
                selectedIds = [];
                return false;
            }

            return false;
        });

        $("#@Html.FieldIdFor(model => model.SearchName)").keydown(function(event) {
            if (event.keyCode == 13) {
                $("#search-categories-suppliers").click();
                return false;
            }
        });

        $("#@Html.FieldIdFor(model => model.Productcode)").keydown(function(event) {
            if (event.keyCode == 13) {
                $("#search-categories-suppliers").click();
                return false;
            }
        });

        //delete selected
        $('#override-selected').click(function(e) {
            e.preventDefault();

            var postData = {
                selectedIds: selectedIds
            };
            addAntiForgeryToken(postData);

            $.ajax({
                cache: false,
                type: "POST",
                url: "@(Url.Action("overrideselected", "ASI"))",
                data: postData,
                complete: function(data) {
                    //reload grid
                    var grid = $('#products-grid').data('kendoGrid');
                    grid.dataSource.read();
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    alert(thrownError);
                },
                traditional: true
            });
            return false;
        });

        $('#ignore-selected').click(function(e) {
            e.preventDefault();

            var postData = {
                selectedIds: selectedIds
            };
            addAntiForgeryToken(postData);

            $.ajax({
                cache: false,
                type: "POST",
                url: "@(Url.Action("ignoreselected", "ASI"))",
                data: postData,
                complete: function(data) {
                    //reload grid
                    var grid = $('#products-grid').data('kendoGrid');
                    grid.dataSource.read();
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    alert(thrownError);
                },
                traditional: true
            });
            return false;
        });


        $('#mastercheckbox').click(function () {
            $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
        });

        //wire up checkboxes.
        $('#products-grid').on('change', 'input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]', function (e) {
            var $check = $(this);
            if ($check.is(":checked") == true) {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked == -1) {
                    //add id to selectedIds.
                    selectedIds.push($check.val());
                }
            }
            else {
                var checked = jQuery.inArray($check.val(), selectedIds);
                if (checked > -1) {
                    //remove id from selectedIds.
                    selectedIds = $.grep(selectedIds, function (item, index) {
                        return item != $check.val();
                    });
                }
            }
            updateMasterCheckbox();
        });
    });

    function additionalData() {
        
        var data = {
            SearchName: $('#@Html.FieldIdFor(model => model.SearchName)').val(),
            Productcode: $('#@Html.FieldIdFor(model => model.Productcode)').val()
        };
        addAntiForgeryToken(data);
        return data;
    }
    function onDataBound(e) {
        $('#products-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').each(function () {
            var currentId = $(this).val();
            var checked = jQuery.inArray(currentId, selectedIds);
            //set checked based on if current checkbox's value is in selectedIds.
            $(this).attr('checked', checked > -1);
        });

        updateMasterCheckbox();
    }

    function updateMasterCheckbox() {
        var numChkBoxes = $('#products-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]').length;
        var numChkBoxesChecked = $('#products-grid input[type=checkbox][id!=mastercheckbox][class=checkboxGroups]:checked').length;
        $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
    }
</script>
