@using Nop.Web.Models.Blogs

@model BlogPostListModel

@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Blog").Text);
    //page class
    Html.AppendPageCssClassParts("html-blog-page");

    var isFirstPage = Model.PagingFilteringContext.PageNumber == 1;
    var firstPostList = new List<BlogPostModel>();
    IList<BlogPostModel> allBlogPosts;
    
    if (isFirstPage)
    {
        firstPostList = Model.BlogPosts.Take(1).ToList();
        allBlogPosts = Model.BlogPosts.Skip(1).ToList();
    }
    else
    {
        allBlogPosts = Model.BlogPosts;
    }
}

@section left {
    @Html.Widget("left_side_column_blog_before")
    @Html.Action("BlogMonths", "Blog")
    @Html.Widget("left_side_column_after_blog_archive")
    @Html.Action("BlogTags", "Blog")
    @Html.Widget("left_side_column_blog_after")
}

<div class="page blog-page">
    <div class="page-title">
        <a href="@Url.RouteUrl("BlogRSS", new { languageId = Model.WorkingLanguageId })" class="link-rss" title="@T("Blog.RSS.Hint")">@T("Blog.RSS")</a>
        <h1>
            @if (String.IsNullOrEmpty(Model.PagingFilteringContext.Tag))
            {
                if (Model.PagingFilteringContext.GetParsedMonth().HasValue)
                {
                    @String.Format(T("Blog.FilteredByMonth").Text, Model.PagingFilteringContext.GetParsedMonth().Value.Year, Model.PagingFilteringContext.GetParsedMonth().Value.ToString("MMMM"))
                }
                else
                {
                    @T("Blog")
                }
            }
            else
            {
                @*@String.Format(T("Blog.TaggedWith").Text, Model.PagingFilteringContext.Tag)*@
                @T("Blog")
            }
        </h1>
    </div>
    <div class="page-body">
        @Html.Widget("bloglist_page_before_posts")
        <div class="blog-posts">
            @if (isFirstPage)
            {
                <div class="first-blog-post">
                    @BlogPostsList(firstPostList)
                </div>
            }
            <div class="blog-posts-list">
                @BlogPostsList(allBlogPosts)
            </div>
        </div>
        @{
            var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
        }
        @if (!pager.IsEmpty())
        {
            <div class="pager">
                @pager
            </div>
        }
        @Html.Widget("bloglist_page_after_posts")
    </div>
</div>

@helper BlogPostsList(IList<BlogPostModel> posts)
{
    foreach (var item in posts)
    {
        @Html.Widget("bloglist_page_before_post", item.Id)
        <div class="post">
            <div class="post-head">
                @Html.Widget("bloglist_page_before_post_body", item.Id)
            </div>
            <div class="post-body">
                <span class="post-date">@item.CreatedOn.ToString("ddd"), @item.CreatedOn.ToString("MMM") @item.CreatedOn.Day, @item.CreatedOn.Year</span>
                @if (item.AllowComments)
                {
                    <a href="@Url.RouteUrl("BlogPost", new {SeName = item.SeName})" class="read-comments">@item.NumberOfComments</a>
                }
                <a class="post-title" href="@Url.RouteUrl("BlogPost", new {SeName = item.SeName})">@item.Title</a>
                <div class="post-preview">
                    @Html.Raw(!String.IsNullOrEmpty(item.BodyOverview) ? item.BodyOverview : item.Body)
                </div>
                @Html.Widget("bloglist_page_inside_post", item.Id)
            </div>
            @Html.Widget("bloglist_page_after_post_body", item.Id)
            @if (item.Tags.Count > 0)
            {
                <div class="tags">
                    <label>@T("Blog.Tags"):</label>
                    <ul>
                        @for (int i = 0; i < item.Tags.Count; i++)
                        {
                            var tag = item.Tags[i];
                            <li><a href="@Url.RouteUrl("BlogByTag", new {tag = tag})">@tag</a></li>
                            if (i != item.Tags.Count - 1)
                            {
                                <li class="separator">,</li>
                            }
                        }
                    </ul>
                </div>
            }
        </div>
        @Html.Widget("bloglist_page_after_post", item.Id)
    }
}