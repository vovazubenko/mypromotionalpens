@model CategoryModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-category-page");

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        //Html.AddCanonicalUrlParts(categoryUrl);
        Uri url = new Uri(this.Request.Url.ToString());
        string path = String.Format("{0}{1}{2}{3}", url.Scheme,
            Uri.SchemeDelimiter, url.Authority, "/" + Model.CanonicalUrl);

        Html.AddCanonicalUrlParts(path);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;

    var pictureService = EngineContext.Current.Resolve<Nop.Services.Media.IPictureService>();

}
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@*category breadcrumb*@

@section Breadcrumb
{
    @if (Model.DisplayCategoryBreadcrumb)
    {
        <div class="breadcrumb">
            <ul>
                <li>
                    <a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
                    <span class="delimiter">@breadcrumbDelimiter</span>
                </li>
                @foreach (var cat in Model.CategoryBreadcrumb)
                {
                    var isLastCategory = cat.Id == Model.Id;
                    <li>
                        @if (isLastCategory)
                        {
                            <strong class="current-item">@cat.Name</strong>
                        }
                        else
                        {
                            <a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a>
                            <span class="delimiter">@breadcrumbDelimiter</span>
                        }
                    </li>
                }
            </ul>
        </div>
        @*@Html.Widget("categorydetails_after_breadcrumb", Model.Id)*@
    }
}
@if (Model.bannerid > 0)
{
    <div class="row">
        <div class="col-md-12">
            <div id="@(Model.bannerid + "image")" class="uploaded-image">
                <img src="@(pictureService.GetPictureUrl(Model.bannerid, 0, true))" style="width:100%;height:250px !important;" />
            </div>
        </div>
    </div>
}
<style>
    .sub-category-grid .item-box {
        margin-bottom: .4% !important
    }

    .sub-category-item {
        border: none !important
    }
</style>
<h3>category-page2 Newwest</h3>
<div class="page category-page">
    @if (Model.CategoryBannerModels.Where(x => x.BannerNumber == 0).Any())
    {
        <div class="category-owl-carousel owl-theme">
            @foreach (var item in Model.CategoryBannerModels.Where(x => x.BannerNumber == 0).OrderBy(x => x.DisplayOrder))
            {
                <div class="item">
                    <a href="@item.BannerUrl"><img src="@item.FullSizeImageUrl" alt="@item.AlternateText"></a>
                </div>
            }
        </div>
    }

    @if (Model.CategoryBannerModels.Where(x => x.BannerNumber != 0).Any())
    {
        <div class="products-main">
            @foreach (var item in Model.CategoryBannerModels.Where(x => x.BannerNumber != 0).OrderBy(x => x.BannerNumber))
            {
                <div class="product-box">
                    <div class="images">
                        <a href="@item.BannerUrl"><img src="@item.FullSizeImageUrl" alt="@item.AlternateText"></a>
                    </div>
                </div>
            }
        </div>
    }


    <div class="speed-filter-htag" id="SpeedFilterHTag"><h1 style="font-size: 25px;text-align: left;color: #0072bc;">@Model.H1Tag</h1></div>
    <div class="speed-filter-header-title" id="SpeedFilterHeadrTitle"><h2 style="font-size: 20px;font-weight:700;color: #0072bc;text-align:left;">@Model.HeaderTitle</h2></div>
    <div class="speed-filter-h2tag" id="SpeedFilterH2Tag"><h2 style="font-size: 20px;font-weight:700;color: #0072bc;text-align:left;">@Model.H2Tag</h2></div>
    <div class="speed-filter-header-copy" id="SpeedFilterHeadrCopy">@Model.HeaderCopy</div>


    <div class="sublist-wrap">
        <ul class="sublist">
            @foreach (var subcategories in Model.SubCategories.OrderBy(x => x.Name))
            {
                <li>
                    <a class="" style="color:#0072bc;padding-left: 15px;font-size: 15px;" href="@Url.RouteUrl("Category", new {SeName = subcategories.SeName})" filter-block="subcategory" filter-option-id="@subcategories.Id">@subcategories.Name</a>
                </li>
            }
        </ul>
    </div>
</div>
<div class="page-title">
    <h2>@Model.Name</h2>
</div>
<div class="page-body">


    @*@Html.Widget("categorydetails_top", Model.Id)*@
    @*description*@
    @if (!String.IsNullOrWhiteSpace(Model.Description))
    {
        <div class="category-description">
            @Html.Raw(Model.Description)
        </div>
    }
    @*@Html.Widget("categorydetails_before_subcategories", Model.Id)*@
    @*subcategories*@
    @if (1 == 2)
    {
        if (Model.SubCategories.Count > 0)
        {
            <div class="category-grid sub-category-grid">
                <div class="item-grid">
                    @foreach (var item in Model.SubCategories.OrderBy(x => x.Name))
                    {
                        <div class="item-box">
                            <div class="sub-category-item category-text">
                                <h2 class="title">
                                    <a href="@Url.RouteUrl("Category", new {SeName = item.SeName})" title="@item.PictureModel.Title">
                                        @item.Name
                                    </a>
                                </h2>
                                @*<div class="picture">
                                        <a href="@Url.RouteUrl("Category", new {SeName = item.SeName})" title="@item.PictureModel.Title">
                                            <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" />
                                        </a>
                                    </div>
                                    @Html.Widget("subcategories_itembox_end", item.Id)*@
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    }
    @Html.Widget("categorydetails_before_featured_products", Model.Id)
    @*featured products*@
    @if (Model.FeaturedProducts.Count > 0)
    {
        <div class="product-grid featured-product-grid">
            <div class="title">
                <strong>@T("Products.FeaturedProducts")</strong>
            </div>
            <div class="item-grid">
                @foreach (var item in Model.FeaturedProducts)
                {
                    <div class="item-box">
                        @Html.Partial("_ProductBox", item)
                    </div>
                }
            </div>
        </div>
    }
    @Html.Widget("categorydetails_after_featured_products", Model.Id)
    @if (Model.Products.Count > 0)
    {
        @Html.Partial("_CatalogSelectors", Model.PagingFilteringContext, new ViewDataDictionary())
    }
    @Html.Widget("categorydetails_before_filters", Model.Id)
    @*<div class="product-filters">
            @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
            {
                @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
            }
            @if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
            {
                @Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())
            }
        </div>*@
    @Html.Widget("categorydetails_before_product_list", Model.Id)

    @if (Model.Products.Count > 0)
    {
        <div class="@(Model.PagingFilteringContext.ViewMode == "list" ? "product-list" : "product-grid")">
            <div class="item-grid">
                @foreach (var product in Model.Products)
                {
                    <div class="item-box">
                        @Html.Partial("_ProductBox", product)
                    </div>
                }
            </div>
        </div>
    }
    @{
        var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
    }
    @if (!pager.IsEmpty())
    {
        <div class="pager">
            @pager
        </div>
    }
    @Html.Widget("categorydetails_bottom", Model.Id)
</div>


@section AsidePageTitle
{
    <div class="page-title">
        <h2>@Model.Name</h2>
    </div>
}
<div class="category-page-footer-content-main">
    @{
        int count = 1;
        foreach (var item in Model.FooterContent)
        {
            <div class="category-page-footer-content">
                <div class="category-page-footer-content-panel panel-default">
                    <div class="category-page-footer-content-panel-heading">
                        <h2 id="footer-heading@(count)" class="panel-title">@Html.Raw(item.Item1)</h2>
                    </div>
                    <div id="footer-content@(count)" class="category-page-footer-content-panel-body">
                        @Html.Raw(item.Item2)<br>
                    </div>
                </div>
            </div>
            count++;
        }
    }

</div>

<script>
    $(document).ready(function () {
    var loop = true;
    if (@Model.CategoryBannerModels.Where(x => x.BannerNumber == 0).Count()== 1)
    {
        loop = false;
    }
    $('.category-owl-carousel').owlCarousel({
        loop: loop,
        margin: 10,
        dots: true,
        autoplay: true,
        autoPlaySpeed: 10000,
        autoPlayTimeout: 10000,
        nav: loop,
        navText: ['<span class="fas fa-chevron-left"></span>', '<span class="fas fa-chevron-right"></span>'],
        responsive: {
            0: {
                items: 1
            },
            600: {
                items: 1
            },
            1000: {
                items: 1
            }
        }
    });

    });

    $(window).load(function () {
        $('html, body').animate({
            scrollTop: $('.category-page').offset().top
        }, 'slow');
    });
</script>