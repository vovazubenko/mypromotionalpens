@model OrderDetailsModel
@using Nop.Web.Models.Order
@using Nop.Core.Infrastructure;

@{
    //register CSS and JS
    Html.AddCssFileParts("~/Scripts/fineuploader/fineuploader-4.2.2.min.css");
    Html.AddScriptParts("~/Scripts/fineuploader/jquery.fineuploader-4.2.2.js");

    //other variables
    var pictureService = EngineContext.Current.Resolve<Nop.Services.Media.IPictureService>();
    const int pictureSize = 100;

    int lastorderID = 0;
    var _storeContext = EngineContext.Current.Resolve<Nop.Core.IStoreContext>();
    var _storeService = EngineContext.Current.Resolve<Nop.Services.Stores.IStoreService>();
    int.TryParse(T("Order.LastOrderid").Text, out lastorderID);
    var store = _storeContext.CurrentStore;
}

@{
    if (!Model.PrintMode)
    {
        Layout = "~/Views/Shared/_ColumnsOne.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Print.cshtml";
    }
    //title
    Html.AddTitleParts(T("PageTitle.OrderDetails").Text);
    //page class
    Html.AppendPageCssClassParts("html-order-details-page");
}
@if (Model.PrintMode)
{
    <script type="text/javascript">
        $(document).ready(function () {
            window.print();
        });
    </script>
}
<div class="page order-details-page">
    @if (!Model.PrintMode)
    {
        <div class="page-title">
            @if (Model.PaymentStatusId == (int)Nop.Core.Domain.Payments.PaymentStatus.SampleRequest)
            {
                <h1>@T("SampleRequest.OrderInformation")</h1>
            }
            else { <h1>@T("Order.OrderInformation")</h1>}

            <a href="@Url.RouteUrl("PrintOrderDetails", new { orderId = Model.Id })" target="_blank" class="button-2 print-order-button">@T("Order.Print")</a>
            @if (!Model.PdfInvoiceDisabled)
            {
                @*<a href="@Url.RouteUrl("GetOrderPdfInvoice", new { orderId = Model.Id })" class="button-2 pdf-invoice-button">@T("Order.GetPDFInvoice")</a>*@
            }

        </div>
    }
    <div class="page-body">
        @if (Model.PrintMode)
        {
            <style>
                .topic-block-title {
                    display: none;
                }

                .topic-block-body {
                    text-align: right;
                    /*border-top: 1px solid lightgray;*/
                }

                .topic-block {
                    width: auto !important;
                    float: right !important;
                    padding: 0 !important;
                    margin: 0 !important;
                }
            </style>
            <div class="popup-header" style="border-bottom: 1px solid lightgray;margin-bottom: 10px;padding-bottom: 10px;">
                <div class="header-logo">
                    @Html.Action("Logo", "Common")
                    <div style="float:right;">
                        @*<p>@store.CompanyName<br>@store.CompanyAddress<br> P - @store.CompanyPhoneNumber<br></p>*@
                        <div class="order-overview" style="padding-top: 15px;">
                            <div class="order-number">
                                <strong>@T("Invoice")</strong>
                            </div>
                            <div class="order-number">
                                @if (Model.PaymentStatusId == (int)Nop.Core.Domain.Payments.PaymentStatus.SampleRequest)
                                {
                                    <strong>@T("SampleRequest.Order#")@Model.CustomOrderNumber</strong>
                                }
                                else {
                                    <strong>@T("Order.Order#")@Model.CustomOrderNumber</strong>
                                }

                            </div>
                            <div class="order-info">
                                <span class="order-date">@T("Order.OrderDate"): @Model.CreatedOn.ToString("D")</span>
                            </div>

                        </div>
                    </div>
                    @*@Html.Action("TopicBlock", "Topic", new { systemName = "ContactUs", @class = "print-order-detail" })*@

                </div>
            </div>
        }
        @Html.Widget("orderdetails_page_top", Model.Id)
        @if (!Model.PrintMode)
        {
            <div class="order-overview">
                <div class="order-number">
                    @if (Model.PaymentStatusId == (int)Nop.Core.Domain.Payments.PaymentStatus.SampleRequest)
                {
                        <strong>@T("SampleRequest.Order#")@Model.CustomOrderNumber</strong>
                    }
                    else {
                        <strong>@T("Order.Order#")@Model.CustomOrderNumber</strong>
                    }
                    @if (!Model.PrintMode && Model.IsSampleRequest == false)
                    {
                        if (Model.IsReOrderAllowed)
                        {
                            <style>
                                .order-detail-top-reorder-button {
                                    display: inline-block;
                                    width: auto;
                                    outline: 1px solid transparent;
                                    background: #940808;
                                    padding: 0 28px;
                                    vertical-align: middle;
                                    color: white;
                                    border: none;
                                    background-image: none !important;
                                    margin: 0 0 0 5px;
                                }
                            </style>
                            <a id="btn-reorder1" href="#pnlReorderDiv" class="button-2 order-detail-top-reorder-button order-details-button">
                                <span style="text-transform: initial;">@T("Order.Reorder")</span>
                            </a>

                        }
                    }

                </div>
                <div class="order-info">
                    <span class="order-date">@T("Order.OrderDate"): @Model.CreatedOn.ToString("D")</span>
                    <span class="order-status">@T("Order.OrderStatus"): @Model.OrderStatus</span>
                </div>
                @if (Model.PaymentStatusId != (int)Nop.Core.Domain.Payments.PaymentStatus.SampleRequest)
                {
                    <div class="order-total">
                        @T("Order.OrderTotal"): <strong>@Model.OrderTotal</strong>
                    </div>
                }
                @Html.Widget("orderdetails_page_overview", Model.Id)
            </div>
        }
        <div class="order-details-area">
            <ul class="billing-info">
                <li class="title">
                    @T("Order.BillingAddress")
                </li>
                @if (Model.BillingAddress.CompanyEnabled && !String.IsNullOrEmpty(Model.BillingAddress.Company))
                {
                    <li class="company">
                        @Model.BillingAddress.Company
                    </li>
                }
                <li class="name">
                    @Model.BillingAddress.FirstName @Model.BillingAddress.LastName
                </li>
                <li class="email">
                    @T("Order.Email"): @Model.BillingAddress.Email
                </li>
                @if (Model.BillingAddress.StreetAddressEnabled)
                {
                    <li class="address1">
                        @Model.BillingAddress.Address1
                    </li>
                }
                @if (Model.BillingAddress.StreetAddress2Enabled && !String.IsNullOrEmpty(Model.BillingAddress.Address2))
                {
                    <li class="address2">
                        @Model.BillingAddress.Address2
                    </li>
                }
                @if (Model.BillingAddress.CityEnabled ||
Model.BillingAddress.StateProvinceEnabled ||
Model.BillingAddress.ZipPostalCodeEnabled)
                {
                    <li class="city-state-zip">
                        @if (Model.BillingAddress.CityEnabled)
                        {
                            @Model.BillingAddress.City
                        }
                        @if (Model.BillingAddress.CityEnabled && (Model.BillingAddress.StateProvinceEnabled || Model.BillingAddress.ZipPostalCodeEnabled))
                        {
                            <text>,</text>
                        }
                        @if (Model.BillingAddress.StateProvinceEnabled)
                        {
                            @Model.BillingAddress.StateProvinceName
                        }
                        @if (Model.BillingAddress.ZipPostalCodeEnabled)
                        {
                            @Model.BillingAddress.ZipPostalCode
                        }
                    </li>
                }
                @if (Model.BillingAddress.CountryEnabled && !String.IsNullOrEmpty(Model.BillingAddress.CountryName))
                {
                    <li class="country">
                        @Model.BillingAddress.CountryName
                    </li>
                }
                @if (Model.BillingAddress.PhoneEnabled)
                {
                    <li class="phone">
                        @T("Order.Phone"): @Model.BillingAddress.PhoneNumber
                    </li>
                }
                @if (Model.BillingAddress.FaxEnabled)
                {
                    <li class="fax">
                        @T("Order.Fax"): @Model.BillingAddress.FaxNumber
                    </li>
                }
                @if (!String.IsNullOrEmpty(Model.VatNumber))
                {
                    <li class="vat">
                        <span class="label">
                            @T("Order.VATNumber")
                        </span>
                        <span class="value">
                            @Model.VatNumber
                        </span>
                    </li>
                }
                @if (!String.IsNullOrEmpty(Model.BillingAddress.FormattedCustomAddressAttributes))
                {
                    <li class="custom-attributes-view">
                        @Html.Raw(Model.BillingAddress.FormattedCustomAddressAttributes)
                    </li>
                }
                @if (!String.IsNullOrEmpty(Model.PaymentMethod))
                {
                    <li class="title">
                        @T("Order.Payment")
                    </li>
                    <li class="payment-method">
                        <span class="label">
                            @T("Order.Payment.Method"):
                        </span>
                        <span class="value">
                            @Model.PaymentMethod
                        </span>
                    </li>
                    if (!Model.PrintMode)
                    {
                        <li class="payment-method-status">
                            <span class="label">
                                @T("Order.Payment.Status"):
                            </span>
                            <span class="value">
                                @Model.PaymentMethodStatus
                            </span>
                        </li>
                    }
                    if (!Model.PrintMode && Model.CanRePostProcessPayment)
                    {
                        @*Complete payment (for redirection payment methods)*@
                        <li class="repost">
                            @using (Html.BeginRouteForm("OrderDetails", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <input type="submit" name="repost-payment" value="@T("Order.RetryPayment")" class="button-2 re-order-button" />
                                <p class="hint">
                                    <em>@T("Order.RetryPayment.Hint")</em>
                                </p>
                            }
                        </li>
                    }
                }
                @if (Model.CustomValues != null)
                {
                    foreach (var item in Model.CustomValues)
                    {
                        <li class="custom-value">
                            <span class="label">
                                @item.Key:
                            </span>
                            <span class="value">
                                @(item.Value != null ? item.Value.ToString() : "")
                            </span>
                        </li>
                    }
                }
            </ul>
            @if (Model.IsShippable)
            {
            <ul class="shipping-info">
                <li class="title">
                    @(Model.PickUpInStore ? T("Order.PickupAddress") : T("Order.ShippingAddress"))
                </li>
                @if (!Model.PickUpInStore)
                {
                    if (Model.ShippingAddress.CompanyEnabled && !String.IsNullOrEmpty(Model.ShippingAddress.Company))
                    {
                        <li class="company">
                            @Model.ShippingAddress.Company
                        </li>
                    }
                    <li class="name">
                        @Model.ShippingAddress.FirstName @Model.ShippingAddress.LastName
                    </li>
                    <li class="email">
                        @T("Order.Email"): @Model.ShippingAddress.Email
                    </li>
                    if (Model.ShippingAddress.StreetAddressEnabled)
                    {
                        <li class="address1">
                            @Model.ShippingAddress.Address1
                        </li>
                    }
                    if (Model.ShippingAddress.StreetAddress2Enabled && !String.IsNullOrEmpty(Model.ShippingAddress.Address2))
                    {
                        <li class="address2">
                            @Model.ShippingAddress.Address2
                        </li>
                    }
                    if (Model.ShippingAddress.CityEnabled ||
                        Model.ShippingAddress.StateProvinceEnabled ||
                        Model.ShippingAddress.ZipPostalCodeEnabled)
                    {
                        <li class="city-state-zip">
                            @if (Model.ShippingAddress.CityEnabled)
                            {
                                @Model.ShippingAddress.City
                            }
                            @if (Model.ShippingAddress.CityEnabled && (Model.ShippingAddress.StateProvinceEnabled || Model.ShippingAddress.ZipPostalCodeEnabled))
                            {
                                <text>,</text>
                            }
                            @if (Model.ShippingAddress.StateProvinceEnabled)
                            {
                                @Model.ShippingAddress.StateProvinceName
                            }
                            @if (Model.ShippingAddress.ZipPostalCodeEnabled)
                            {
                                @Model.ShippingAddress.ZipPostalCode
                            }
                        </li>
                    }
                    if (Model.ShippingAddress.CountryEnabled && !String.IsNullOrEmpty(Model.ShippingAddress.CountryName))
                    {
                        <li class="country">
                            @Model.ShippingAddress.CountryName
                        </li>
                    }
                    if (Model.ShippingAddress.PhoneEnabled)
                    {
                        <li class="phone">
                            @T("Order.Phone"): @Model.ShippingAddress.PhoneNumber
                        </li>
                    }
                    if (Model.ShippingAddress.FaxEnabled)
                    {
                        <li class="fax">
                            @T("Order.Fax"): @Model.ShippingAddress.FaxNumber
                        </li>
                    }
                    if (!String.IsNullOrEmpty(Model.ShippingAddress.FormattedCustomAddressAttributes))
                    {
                        <li class="custom-attributes-view">
                            @Html.Raw(Model.ShippingAddress.FormattedCustomAddressAttributes)
                        </li>
                    }
                }
                else
                {
                    if (!string.IsNullOrEmpty(Model.PickupAddress.Address1))
                    {
                        <li class="address1">
                            @Model.PickupAddress.Address1
                        </li>
                    }
                    if (!string.IsNullOrEmpty(Model.PickupAddress.City) || !string.IsNullOrEmpty(Model.PickupAddress.ZipPostalCode))
                    {
                        <li class="city-state-zip">
                            @if (!string.IsNullOrEmpty(Model.PickupAddress.City))
                            {
                                @Model.PickupAddress.City
                            }
                            @if (!string.IsNullOrEmpty(Model.PickupAddress.ZipPostalCode))
                            {
                                <text>,</text>
                                @Model.PickupAddress.ZipPostalCode
                            }
                        </li>
                    }
                    if (!string.IsNullOrEmpty(Model.PickupAddress.CountryName))
                    {
                        <li class="country">
                            @Model.PickupAddress.CountryName
                        </li>
                    }
                }
                <li class="title">
                    @T("Order.Shipping")
                </li>
                <li class="shipping-method">
                    <span class="label">
                        @T("Order.Shipping.Name"):
                    </span>
                    <span class="value">
                        @Model.ShippingMethod
                    </span>
                </li>
                @if (!Model.PrintMode && !Model.PickUpInStore)
                {
                    <li class="shipping-status">
                        <span class="label">
                            @T("Order.Shipping.Status"):
                        </span>
                        <span class="value">
                            @Model.ShippingStatus
                        </span>
                    </li>
                }
            </ul>
            }
        </div>

        @if (Model.Items.Count > 0)
        {
            @Html.Widget("orderdetails_page_beforeproducts", Model.Id)
            <div class="section products">
                <div class="title">
                    <strong>@T("Order.Product(s)")</strong>
                </div>
                <div class="table-wrapper">
                    <table class="data-table">
                        <colgroup>
                            <col />
                            @if (Model.ShowSku)
                            {
                                <col width="1" />
                            }
                            <col />
                            <col width="1" />
                            <col width="1" />
                            <col width="1" />
                        </colgroup>
                        <thead>
                            <tr>
                                <th>
                                    <span class="item-count">#</span>
                                </th>
                                @if (Model.ShowSku)
                                {
                                    <th class="sku" data-hide="w410, w480, w580, w768">
                                        @T("Order.Product(s).SKU")
                                    </th>
                                }
                                <th class="name">
                                    @T("Order.Product(s).Name")
                                </th>
                                @if (Model.PaymentStatusId != (int)Nop.Core.Domain.Payments.PaymentStatus.SampleRequest)
                                {
                                    <th class="price" data-hide="w410, w480, w580">
                                        @T("Order.Product(s).Price")
                                    </th>
                                }
                                <th class="quantity" data-hide="w410, w480, w580">
                                    @T("Order.Product(s).Quantity")
                                </th>
                                @if (Model.PaymentStatusId != (int)Nop.Core.Domain.Payments.PaymentStatus.SampleRequest)
                                {
                                    <th class="total" data-hide="w410">
                                        @T("Order.Product(s).Total")
                                    </th>
                                }
                                @*<th class="product-picture">
                                        @T("ShoppingCart.Image")
                                    </th>*@
                            </tr>
                        </thead>
                        <tbody>
                            @{var counter = 0;}
                            @foreach (var item in Model.Items)
                            {
                                counter++;
                                <tr>
                                    <td>
                                        <span class="item-count">@counter</span>
                                    </td>
                                    @if (Model.ShowSku)
                                    {
                                        <td class="sku">
                                            @item.Sku
                                        </td>
                                    }
                                    <td class="product">
                                        @if (!Model.PrintMode)
                                        {
                                            <em><a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a></em>
                                        }
                                        else
                                        {
                                            @item.ProductName
                                        }
                                        @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                        {
                                            <div class="attributes">
                                                @Html.Raw(item.AttributeInfo)
                                            </div>
                                        }
                                        @if (!String.IsNullOrEmpty(item.RentalInfo))
                                        {
                                            <div class="rental-info">
                                                @Html.Raw(item.RentalInfo)
                                            </div>
                                        }
                                        @if (item.DownloadId > 0)
                                        {
                                            <div class="download">
                                                <a href="@Url.RouteUrl("GetDownload", new { orderItemId = item.OrderItemGuid })">@T("DownloadableProducts.Fields.Download")</a>
                                            </div>
                                        }
                                        @if (item.LicenseId > 0)
                                        {
                                            <div class="download license">
                                                <a href="@Url.RouteUrl("GetLicense", new {orderItemId = item.OrderItemGuid})">@T("DownloadableProducts.Fields.DownloadLicense")</a>
                                            </div>
                                        }
                                        @Html.Widget("orderdetails_product_line", item.Id)
                                    </td>
                                    @if (Model.PaymentStatusId != (int)Nop.Core.Domain.Payments.PaymentStatus.SampleRequest)
                                    {
                                        <td class="unit-price">
                                            @item.UnitPrice
                                        </td>
                                    }
                                    <td class="quantity">
                                        @item.Quantity
                                    </td>
                                    @if (Model.PaymentStatusId != (int)Nop.Core.Domain.Payments.PaymentStatus.SampleRequest)
                                    {
                                        <td class="total">
                                            @item.SubTotal
                                            <span class="product-subtotal" style="float:left;">@T("ShoppingCart.SetupFee") @item.SetupFee</span>
                                        </td>
                                    }
                                    @*<td class="product-picture">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div id="@(item.pictureid + "image")" class="uploaded-image">
                                                        <img src="@(pictureService.GetPictureUrl(item.pictureid, pictureSize, true))" />
                                                    </div>
                                                </div>
                                            </div>
                                        </td>*@
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            @Html.Widget("orderdetails_page_afterproducts", Model.Id)

                                <div class="section options">
                                    @if (Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
                                    {
                                        var inclTax = Model.PricesIncludeTax;
                                        //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                                        //of course, you can modify appropriate locales to include VAT info there
                                        <div class="tax-shipping-info">
                                            @T(inclTax ? "Order.TaxShipping.InclTax" : "Order.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                                        </div>
                                    }
                                    @if (!String.IsNullOrEmpty(Model.CheckoutAttributeInfo))
                {
                                        <div class="selected-checkout-attributes">
                                            @Html.Raw(Model.CheckoutAttributeInfo)
                                        </div>
                                    }
                                    @if (!Model.PrintMode && Model.IsSampleRequest == false)
                {
                                        <div class="actions">
                                            @if (Model.IsReOrderAllowed)
                                            {

                                                if (Model.Id > lastorderID)
                                                {
                                                    @*<input type="button" value="@T("Order.Reorder")" class="button-1 re-order-button" onclick="setLocation('@Url.RouteUrl("ReOrder", new { orderId = Model.Id })    ')" />*@
                                                }
                                                <div class="pnlReorder" id="pnlReorderDiv" style="display:none">
                                                    @using (Html.BeginRouteForm("OrderDetails", FormMethod.Post))
                                                    {

                                                        @Html.TextAreaFor(x => x.ReorderComment, new { @style = "width: 100%;", @placeholder = @T("Order.Reorder.Note") })
                                                        <input type="submit" style="background: #940808 !important;color: white;margin: 0;margin-top: 10px;margin-right:5px;" name="reorder-payment" value="@T("Order.Reorder")" class="button-1 re-order-button" />
                                                        <input type="button" style="background: #940808 !important;color: white;margin: 0;margin-top: 10px;" name="reorder-payment" value="@T("Cancel")" class="button-1 re-order-button" id="cancel-reorder" />

                                                    }
                                                </div>
                                                <input type="button" value="@T("Order.Reorder")" id="btn-reorder" class="button-1 re-order-button" />
                                                <script>
                                                    $(document).ready(function () {
                                                        $("#btn-reorder").click(function () {
                                                            $(".pnlReorder").show();
                                                            $(this).hide();
                                                        });
                                                        $("#cancel-reorder").click(function () {
                                                            $(".pnlReorder").hide();
                                                            $("#btn-reorder").show();
                                                        });
                                                        $("#btn-reorder1").click(function () {
                                                            $(".pnlReorder").show();
                                                            $("#btn-reorder").hide();
                                                            this.href = "#pnlReorderDiv";
                                                        });

                                                    });</script>
                                            }
                                            @if (Model.IsReturnRequestAllowed)
                                            {
                                                <input type="button" value="@T("Order.ReturnItems")" class="button-2 return-items-button" onclick="setLocation('@Url.RouteUrl("ReturnRequest", new { orderId = Model.Id })    ')" />
                                            }
                                        </div>
                                    }
                                </div>
                                if (Model.PaymentStatusId != (int)Nop.Core.Domain.Payments.PaymentStatus.SampleRequest)
                                {
                                    <div class="section totals">
                                        <div class="total-info">
                                            <table class="cart-total">
                                                <tbody>
                                                    <tr>
                                                        <td class="cart-total-left">
                                                            <label>@T("Order.SubTotal"):</label>
                                                        </td>
                                                        <td class="cart-total-right">
                                                            <span>@Model.OrderSubtotal</span>
                                                        </td>
                                                    </tr>
                                                    @if (!string.IsNullOrEmpty(Model.OrderSubTotalDiscount))
                                                    {
                                                        <tr>
                                                            <td class="cart-total-left">
                                                                <label>@T("Order.SubTotalDiscount"):</label>
                                                            </td>
                                                            <td class="cart-total-right">
                                                                <span>@Model.OrderSubTotalDiscount</span>
                                                            </td>
                                                        </tr>
                                                    }
                                                    @if (Model.IsShippable)
                                                    {
                                                        <tr>
                                                            <td class="cart-total-left">
                                                                <label>@T("Order.Shipping"):</label>
                                                            </td>
                                                            <td class="cart-total-right">
                                                                <span>@Model.OrderShipping</span>
                                                            </td>
                                                        </tr>
                                                    }
                                                    @if (!string.IsNullOrEmpty(Model.PaymentMethodAdditionalFee))
                                                    {
                                                        <tr>
                                                            <td class="cart-total-left">
                                                                <label>@T("Order.PaymentMethodAdditionalFee"):</label>
                                                            </td>
                                                            <td class="cart-total-right">
                                                                <span>@Model.PaymentMethodAdditionalFee</span>
                                                            </td>
                                                        </tr>
                                                    }
                                                    @if (Model.DisplayTaxRates && Model.TaxRates.Count > 0)
                                                    {
                                                        foreach (var taxRate in Model.TaxRates)
                                                        {
                                                            <tr>
                                                                <td class="cart-total-left">
                                                                    <label>@string.Format(T("Order.TaxRateLine").Text, taxRate.Rate):</label>
                                                                </td>
                                                                <td class="cart-total-right">
                                                                    <span>@taxRate.Value</span>
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                    @if (Model.DisplayTax)
                                                    {
                                                        <tr>
                                                            <td class="cart-total-left">
                                                                <label>@T("Order.Tax"):</label>
                                                            </td>
                                                            <td class="cart-total-right">
                                                                <span>@Model.Tax</span>
                                                            </td>
                                                        </tr>
                                                    }
                                                    @if (!string.IsNullOrEmpty(Model.OrderTotalDiscount))
                                                    {
                                                        <tr>
                                                            <td class="cart-total-left">
                                                                <label>@T("Order.TotalDiscount"):</label>
                                                            </td>
                                                            <td class="cart-total-right">
                                                                <span>@Model.OrderTotalDiscount</span>
                                                            </td>
                                                        </tr>
                                                    }
                                                    @if (Model.GiftCards.Count > 0)
                                                    {
                                                        foreach (var gc in Model.GiftCards)
                                                        {
                                                            <tr>
                                                                <td class="cart-total-left">
                                                                    <label>@string.Format(T("Order.GiftCardInfo").Text, gc.CouponCode):</label>
                                                                </td>
                                                                <td class="cart-total-right">
                                                                    <span>@gc.Amount</span>
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                    @if (Model.RedeemedRewardPoints > 0)
                                                    {
                                                        <tr>
                                                            <td class="cart-total-left">
                                                                <label>@string.Format(T("Order.RewardPoints").Text, Model.RedeemedRewardPoints):</label>
                                                            </td>
                                                            <td class="cart-total-right">
                                                                <span>@Model.RedeemedRewardPointsAmount</span>
                                                            </td>
                                                        </tr>
                                                    }
                                                    <tr>
                                                        <td class="cart-total-left">
                                                            <label>@T("Order.OrderTotal"):</label>
                                                        </td>
                                                        <td class="cart-total-right">
                                                            <span><strong>@Model.OrderTotal</strong></span>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                }
                                if (Model.PrintMode)
                                {
                                    <div class="popup-header" style="border-top: 1px solid lightgray;margin-top: 10px;padding-bottom: 10px;">
                                        <div class="header-logo">

                                            <div>
                                                <p>@store.CompanyName<br>@store.CompanyAddress<br> P - @store.CompanyPhoneNumber<br></p>

                                            </div>
                                            @*@Html.Action("TopicBlock", "Topic", new { systemName = "ContactUs", @class = "print-order-detail" })*@

                                        </div>
                                    </div>
                                    }
                                }
        @if (!Model.PrintMode)
        {
            if (Model.Shipments.Count > 0)
            {
                <div class="section shipments">
                    <div class="title">
                        <strong>@T("Order.Shipments")</strong>
                    </div>
                    <div class="table-wrapper">
                        <table class="data-table">
                            <colgroup>
                                <col width="1" />
                                <col width="1" />
                                <col />
                                <col />
                                <col />
                                <col />
                            </colgroup>
                            <thead>
                                <tr>
                                    <th>
                                        <span class="item-count">#</span>
                                    </th>
                                    <th class="shipment-id" data-hide="w410, w480, w580, w768">
                                        @T("Order.Shipments.ID")
                                    </th>
                                    <th class="tracking-number">
                                        @T("Order.Shipments.TrackingNumber")
                                    </th>
                                    <th class="shipping-date" data-hide="w410, w480, w580">
                                        @T("Order.Shipments.ShippedDate")
                                    </th>
                                    <th class="delivery-date" data-hide="w410, w480, w580">
                                        @T("Order.Shipments.DeliveryDate")
                                    </th>
                                    <th class="view-details" data-hide="w410">
                                        @T("Order.Shipments.ViewDetails")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{var counter = 0;}
                                @foreach (var item in Model.Shipments)
                                {
                                    counter++;
                                    <tr>
                                        <td>
                                            <span class="item-count">@counter</span>
                                        </td>
                                        <td class="shipment-id">
                                            @item.Id.ToString()
                                        </td>
                                        <td class="tracking-number">
                                            @if (!string.IsNullOrEmpty(item.TrackingNumberUrl))
                                            {
                                                <a href="@item.TrackingNumberUrl" target="_blank" class="margin-l-10">@item.TrackingNumber</a>
                                            }
                                            else {
                                                @item.TrackingNumber
                                            }
                                        </td>
                                        <td class="shipped-date">
                                            @if (item.ShippedDate.HasValue)
                                            {
                                                @item.ShippedDate.Value.ToString("D")
                                            }
                                            else
                                            {
                                                @T("Order.Shipments.ShippedDate.NotYet")
                                            }
                                        </td>
                                        <td class="delivery-date">
                                            @if (item.DeliveryDate.HasValue)
                                            {
                                                @item.DeliveryDate.Value.ToString("D")
                                            }
                                            else
                                            {
                                                @T("Order.Shipments.DeliveryDate.NotYet")
                                            }
                                        </td>
                                        <td class="view-details">
                                            <a href="@Url.RouteUrl("ShipmentDetails", new { shipmentId = item.Id })" title="@T("Order.Shipments.ViewDetails")">@T("Order.Shipments.ViewDetails")</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                                        }
                                    }
        @if (!Model.PrintMode)
        {
            if (Model.OrderNotes.Count > 0)
            {
                <div class="section order-notes">
                    <div class="title">
                        <strong>@T("Order.Notes")</strong>
                    </div>
                    <div class="table-wrapper">
                        <table class="data-table">
                            <colgroup>
                                <col />
                                <col />
                            </colgroup>
                            <thead>
                                <tr>
                                    <th class="created-on">
                                        @T("Order.Notes.CreatedOn")
                                    </th>
                                    <th class="note">
                                        @T("Order.Notes.Note")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderNotes)
                                {
                                    <tr>
                                        <td class="created-on">
                                            @item.CreatedOn.ToString()
                                        </td>
                                        <td class="note">
                                            @Html.Raw(item.Note)
                                            @if (item.HasDownload)
                                            {
                                                <p class="download">
                                                    <a href="@Url.RouteUrl("GetOrderNoteFile", new { ordernoteid = item.Id })">@T("Order.Notes.Download")</a>
                                                </p>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        }
        @Html.Widget("orderdetails_page_bottom", Model.Id)
    </div>
</div>
