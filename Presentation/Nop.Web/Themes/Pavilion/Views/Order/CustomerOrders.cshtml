@model CustomerOrderListModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-order-list-page");
}
@using Nop.Web.Models.Customer
@using Nop.Web.Models.Order;
@section left
{
    @Html.Action("CustomerNavigation", "Customer", new { selectedTabId = CustomerNavigationEnum.Orders })
}
<style>
    .order-history-view-replace-order-button {
        display: inline-block;
        width: auto;
        outline: 1px solid transparent;
        background: #940808;
        padding: 0 28px;
        vertical-align: middle;
        color: white;
        height: 43px;
        border: none;
        background-image: none !important;
        margin: 10px 0 0 5px;
    }
</style>
<div class="page account-page order-list-page">
    <div class="page-title">
        <h1>@T("Account.MyAccount") - @T("Account.CustomerOrders")</h1>
    </div>
    <div class="page-body">
        @if (Model.RecurringOrders.Count > 0)
        {
            <div class="section recurring-payments">
                <div class="title">
                    <strong>@T("Account.CustomerOrders.RecurringOrders")</strong>
                </div>
                @using (Html.BeginForm())
                {
                    var canRetryRecurringOrders = Model.RecurringOrders.Any(recurring => recurring.CanRetryLastPayment);
                    @Html.AntiForgeryToken()
                    <div class="table-wrapper">
                        <table class="data-table">
                            <colgroup>
                                <col width="1" />
                                <col />
                                <col />
                                <col />
                                <col />
                                <col />
                                <col />
                                @if (canRetryRecurringOrders)
                                {
                                <col /> }
                                <col />
                            </colgroup>
                            <thead>
                                <tr>
                                    <th>
                                        <span class="item-count">#</span>
                                    </th>
                                    <th class="start-date" data-hide="w410, w480, w580">
                                        @T("Account.CustomerOrders.RecurringOrders.StartDate")
                                    </th>
                                    <th class="cycle-info" data-hide="w410, w480, w580, w768, w980">
                                        @T("Account.CustomerOrders.RecurringOrders.CycleInfo")
                                    </th>
                                    <th class="next-payment">
                                        @T("Account.CustomerOrders.RecurringOrders.NextPayment")
                                    </th>
                                    <th class="total-cycles" data-hide="w410, w480, w580, w768, w980">
                                        @T("Account.CustomerOrders.RecurringOrders.TotalCycles")
                                    </th>
                                    <th class="cycles-remaining" data-hide="w410, w480, w580, w768, w980">
                                        @T("Account.CustomerOrders.RecurringOrders.CyclesRemaining")
                                    </th>
                                    <th class="initial-order" data-hide="w410, w480, w580, w768">
                                        @T("Account.CustomerOrders.RecurringOrders.InitialOrder")
                                    </th>
                                    @if (canRetryRecurringOrders)
                                    {
                                        <th class="retry">
                                            @T("Account.CustomerOrders.RecurringOrders.RetryLastPayment")
                                        </th>
                                    }
                                    <th class="cancel" data-hide="w410">
                                        @T("Account.CustomerOrders.RecurringOrders.Cancel")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{var counter = 0;}
                                @foreach (var item in Model.RecurringOrders)
                                {
                                    counter++;
                                    <tr>
                                        <td>
                                            <span class="item-count">@counter</span>
                                        </td>
                                        <td class="start-date">
                                            @item.StartDate
                                        </td>
                                        <td class="cycle-info">
                                            @item.CycleInfo
                                        </td>
                                        <td class="next-payment">
                                            @item.NextPayment
                                        </td>
                                        <td class="total-cycles">
                                            @item.TotalCycles
                                        </td>
                                        <td class="cycles-remaining">
                                            @item.CyclesRemaining
                                        </td>
                                        <td class="initial-order">
                                            <a href="@Url.RouteUrl("OrderDetails", new { orderId = item.InitialOrderId })">@string.Format(T("Account.CustomerOrders.RecurringOrders.ViewInitialOrder").Text, item.InitialOrderNumber)</a>
                                        </td>
                                        @if (canRetryRecurringOrders)
                                        {
                                            <td class="retry">
                                                @if (item.CanRetryLastPayment)
                                                {
                                                    <input type="submit" name="retryLastPayment_@(item.Id)" value="@T("Account.CustomerOrders.RecurringOrders.RetryLastPayment")" class="button-2 retry-recurring-order-button" />
                                                }
                                            </td>
                                        }
                                        <td class="cancel">
                                            @if (item.CanCancel)
                                            {
                                                <input type="submit" name="cancelRecurringPayment@(item.Id)" value="@T("Account.CustomerOrders.RecurringOrders.Cancel")" class="button-2 cancel-recurring-order-button" />
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                                    }
            </div>
                                    if (Model.RecurringPaymentErrors.Any())
                                    {
                                        <div class="message-error">
                                            <ul>
                                                @foreach (var error in Model.RecurringPaymentErrors)
                                                {
                                                    <li>@error</li>
                                                }
                                            </ul>
                                        </div>
                                        }
                                    }

        @if (Model.Orders.Count > 0)
        {
            <div class="order-list">
                @foreach (var order in Model.Orders)
                {
                    <div class="section order-item">
                        <div class="title">
                            <strong>@T("Account.CustomerOrders.OrderNumber"): @order.CustomOrderNumber</strong>
                        </div>
                        <ul class="info">
                            <li>@T("Account.CustomerOrders.OrderStatus"): <span class="order-status @order.OrderStatusEnum.ToString().ToLowerInvariant()">@order.OrderStatus</span></li>
                            <li>@T("Account.CustomerOrders.OrderDate"): <span class="order-date">@order.CreatedOn.ToString()</span></li>
                            <li>@T("Account.CustomerOrders.OrderTotal"): <span class="order-total">@order.OrderTotal</span></li>
                            <li>
                                <button type="button" value="@T("Account.CustomerOrders.OrderDetails")" 
                                        class="button-2 order-history-view-replace-order-button order-details-button" 
                                        onclick="setLocation('@Url.RouteUrl("OrderDetails", new { orderId = order.Id })')">
                                    <span>@T("Account.CustomerOrders.View")</span>
                                </button>
                                @if (order.IsReturnRequestAllowed)
                                {<button type="button" value="@T("Account.CustomerOrders.ReturnItems")" 
                                         class="button-2 order-history-view-replace-order-button return-items-button" 
                                         onclick="setLocation('@Url.RouteUrl("ReturnRequest", new { orderId = order.Id })')">
                                <span>@T("Account.CustomerOrders.ReturnItems")</span></button>}
                            </li>
                        </ul>
                        <div class="buttons" style="position: relative;left: 60px;bottom: 5px;margin: 0;">
                            @*@if (order.IsReturnRequestAllowed)
                                {
                                    <input type="button" value="@T("Account.CustomerOrders.ReturnItems")" class="button-2 return-items-button" onclick="setLocation('@Url.RouteUrl("ReturnRequest", new { orderId = order.Id })')" />
                                }
                                <input type="button" value="@T("Account.CustomerOrders.OrderDetails")" class="button-2 order-details-button" onclick="setLocation('@Url.RouteUrl("OrderDetails", new { orderId = order.Id })')" />*@
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="no-data">
                @T("Account.CustomerOrders.NoOrders")
            </div>
        }
    </div>
</div>
